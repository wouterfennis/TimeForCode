<?xml version="1.0" encoding="utf-8"?>
<TestRun id="35a0d711-2767-4d92-9e75-594e8eff6377" name="WouterF@ISNL-H1STN44 2025-03-20 21:19:30" runUser="CRONOS\WouterF" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-03-20T21:19:30.5701295+01:00" queuing="2025-03-20T21:19:30.5701300+01:00" start="2025-03-20T21:19:28.0203504+01:00" finish="2025-03-20T21:19:31.6152136+01:00" />
  <TestSettings name="default" id="c5e466e6-ad81-4884-8cfe-6916abbe0c19">
    <Deployment runDeploymentRoot="WouterF_ISNL-H1STN44_2025-03-20_21_19_30" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="7bc96c2d-713c-4c4a-a15f-74461152c2fb" testId="50ebd6bf-8bfd-ff90-3ff5-e6e2347d04d0" testName="UserHasNotLoggedInAtTheExternalPlatform" computerName="ISNL-H1STN44" duration="00:00:00.8114367" startTime="2025-03-20T21:19:29.2052930+01:00" endTime="2025-03-20T21:19:30.4748278+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7bc96c2d-713c-4c4a-a15f-74461152c2fb">
      <Output>
        <StdOut>-&gt; Loading plugin C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\Reqnroll.MSTest.ReqnrollPlugin.dll&#xD;
-&gt; Loading plugin C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll&#xD;
-&gt; Using default config&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has not logged in at the time for code platform&#xD;
-&gt; done: LogoutSteps.GivenTheUserHasNotLoggedInAtTheTimeForCodePlatform() (0,0s)&#xD;
When The user calls the refresh token endpoint&#xD;
-&gt; done: RefreshSteps.WhenTheUserCallsTheRefreshTokenEndpointAsync() (0,2s)&#xD;
Then The following refresh error message is returned: "No refresh token found."&#xD;
-&gt; done: RefreshSteps.ThenTheFollowingRefreshErrorMessageIsReturned("No refresh token ...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9616d17e-37a7-447c-8c00-b1b1f1bdb039" testId="0b217f60-3ed5-0b26-935e-af8087cd4d42" testName="UserHasExpiredRefreshToken" computerName="ISNL-H1STN44" duration="00:00:00.1225117" startTime="2025-03-20T21:19:30.5180136+01:00" endTime="2025-03-20T21:19:30.6409951+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9616d17e-37a7-447c-8c00-b1b1f1bdb039">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has an expired refresh token&#xD;
-&gt; done: RefreshSteps.GivenTheUserHasAnExpiredRefreshToken() (0,0s)&#xD;
When The user calls the refresh token endpoint&#xD;
-&gt; done: RefreshSteps.WhenTheUserCallsTheRefreshTokenEndpointAsync() (0,0s)&#xD;
Then The following refresh error message is returned: "Refresh token expired"&#xD;
-&gt; done: RefreshSteps.ThenTheFollowingRefreshErrorMessageIsReturned("Refresh token exp...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="21ce6db1-f241-42d4-9f3d-c6a94f1494e8" testId="4fcc67cb-c565-3b6e-0aab-29271a7573dc" testName="UserHasLoggedInAtTheTimeForCodePlatform" computerName="ISNL-H1STN44" duration="00:00:00.0642335" startTime="2025-03-20T21:19:30.8616260+01:00" endTime="2025-03-20T21:19:30.9264061+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="21ce6db1-f241-42d4-9f3d-c6a94f1494e8">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has an access token&#xD;
-&gt; done: LogoutSteps.GivenTheUserHasAnAccessToken() (0,0s)&#xD;
And The user has a refresh token&#xD;
-&gt; done: RefreshSteps.GivenTheUserHasARefreshToken() (0,0s)&#xD;
When The user logs out from the external platform&#xD;
-&gt; done: LogoutSteps.WhenTheUserLogsOutFromTheExternalPlatformAsync() (0,0s)&#xD;
Then The refresh token is revoked&#xD;
-&gt; done: RefreshSteps.ThenTheRefreshTokenIsRevoked() (0,0s)&#xD;
Then The access token is revoked&#xD;
-&gt; done: RefreshSteps.ThenTheAccessTokenIsRevoked() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="43264110-3099-4afe-8a0c-f24eff001b0d" testId="65b43fdb-ff04-4c17-0d3e-2262f739802e" testName="UserHasNotLoggedInAtTheTimeForCodePlatform" computerName="ISNL-H1STN44" duration="00:00:00.0925908" startTime="2025-03-20T21:19:30.7681390+01:00" endTime="2025-03-20T21:19:30.8611278+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="43264110-3099-4afe-8a0c-f24eff001b0d">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: TimeForCode.Authorization.Application.Handlers.LogoutHandler[0]&#xD;
      Refresh token is null during logout&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has not logged in at the time for code platform&#xD;
-&gt; done: LogoutSteps.GivenTheUserHasNotLoggedInAtTheTimeForCodePlatform() (0,0s)&#xD;
When The user logs out from the external platform&#xD;
-&gt; done: LogoutSteps.WhenTheUserLogsOutFromTheExternalPlatformAsync() (0,0s)&#xD;
Then The logout is confirmed&#xD;
-&gt; done: LogoutSteps.ThenTheLogoutIsConfirmed() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="19616cf7-9f42-456d-b36d-c2303b468b80" testId="1046fbe7-4849-a8f8-7f85-9f482fac6a06" testName="UserWantsToLoginWithAnExistingAccount" computerName="ISNL-H1STN44" duration="00:00:00.0848540" startTime="2025-03-20T21:19:31.3032217+01:00" endTime="2025-03-20T21:19:31.3969469+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="19616cf7-9f42-456d-b36d-c2303b468b80">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has an account at the external platform&#xD;
-&gt; done: GeneralSteps.GivenTheUserHasAnAccountAtTheExternalPlatform() (0,0s)&#xD;
When The user logs in at the time for code platform&#xD;
-&gt; done: LoginSteps.WhenTheUserLogsInAtTheTimeForCodePlatformAsync() (0,0s)&#xD;
Then The user is redirected to the external platform&#xD;
-&gt; done: LoginSteps.ThenTheUserIsRedirectedToTheExternalPlatform() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8818c8c4-101a-495e-bdfd-22382e794da6" testId="b07af054-76d2-2f83-0084-06d516ff3000" testName="AccessTokenCannotBeReceivedAtTheExternalPlatform" computerName="ISNL-H1STN44" duration="00:00:00.1298664" startTime="2025-03-20T21:19:31.0268247+01:00" endTime="2025-03-20T21:19:31.1569101+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8818c8c4-101a-495e-bdfd-22382e794da6">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user logs in at the time for code platform&#xD;
-&gt; done: LoginSteps.WhenTheUserLogsInAtTheTimeForCodePlatformAsync() (0,0s)&#xD;
And The external platform does not return the access token&#xD;
-&gt; done: CallbackSteps.GivenTheExternalPlatformDoesNotReturnTheAccessToken() (0,0s)&#xD;
When The external platform calls the time for code platform to complete the authorization&#xD;
-&gt; done: CallbackSteps.WhenTheExternalPlatformCallsTheTimeForCodePlatformToCompleteTheAuthorizationAsync() (0,1s)&#xD;
Then An access token is not returned&#xD;
-&gt; done: CallbackSteps.ThenAnAccessTokenIsNotReturned() (0,0s)&#xD;
And The following callback error message is returned: "Access token cannot be received"&#xD;
-&gt; done: CallbackSteps.ThenTheFollowingCallbackErrorMessageIsReturned("Access token cann...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fa51811d-b8b0-488b-b087-483d946967f4" testId="cb7d3e80-f2be-0c03-dc4f-57dfb4e217e4" testName="UserHasValidRefreshToken" computerName="ISNL-H1STN44" duration="00:00:00.1206259" startTime="2025-03-20T21:19:30.6425355+01:00" endTime="2025-03-20T21:19:30.7674632+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fa51811d-b8b0-488b-b087-483d946967f4">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has a refresh token&#xD;
-&gt; done: RefreshSteps.GivenTheUserHasARefreshToken() (0,0s)&#xD;
When The user calls the refresh token endpoint&#xD;
-&gt; done: RefreshSteps.WhenTheUserCallsTheRefreshTokenEndpointAsync() (0,1s)&#xD;
Then An access token is returned&#xD;
-&gt; done: CallbackSteps.ThenAAccessTokenIsReturned() (0,0s)&#xD;
And A refresh token is returned&#xD;
-&gt; done: RefreshSteps.ThenARefreshTokenIsReturned() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7f8dc1c3-d415-47c6-a2a3-07da4a611fd9" testId="9fdc4ae2-ac90-d0a5-b864-49865970d17b" testName="UserHasAnAccountAtTheExternalPlatform" computerName="ISNL-H1STN44" duration="00:00:00.0755133" startTime="2025-03-20T21:19:31.2267666+01:00" endTime="2025-03-20T21:19:31.3027511+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7f8dc1c3-d415-47c6-a2a3-07da4a611fd9">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: TimeForCode.Authorization.Application.Services.AccountService[0]&#xD;
      Account information: TimeForCode.Authorization.Domain.Entities.AccountInformation&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has an account at the external platform&#xD;
-&gt; done: GeneralSteps.GivenTheUserHasAnAccountAtTheExternalPlatform() (0,0s)&#xD;
And The user logs in at the time for code platform&#xD;
-&gt; done: LoginSteps.WhenTheUserLogsInAtTheTimeForCodePlatformAsync() (0,0s)&#xD;
And The user logs in at the external platform&#xD;
-&gt; done: GeneralSteps.GivenTheUserLogsInAtTheExternalPlatform() (0,0s)&#xD;
When The external platform calls the time for code platform to complete the authorization&#xD;
-&gt; done: CallbackSteps.WhenTheExternalPlatformCallsTheTimeForCodePlatformToCompleteTheAuthorizationAsync() (0,0s)&#xD;
Then An access token is returned&#xD;
-&gt; done: CallbackSteps.ThenAAccessTokenIsReturned() (0,0s)&#xD;
And The user information is saved in the time for code platform&#xD;
-&gt; done: CallbackSteps.ThenTheUserInformationIsSavedInTheTimeForCodePlatform() (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="36842a08-517f-4ba2-8665-055efc5b5ccf" testId="8ed13efa-2d4e-3a8e-bfbe-e613d010dc07" testName="UserHasNoAccountInformationAtTheExternalPlatform" computerName="ISNL-H1STN44" duration="00:00:00.0686767" startTime="2025-03-20T21:19:31.1574199+01:00" endTime="2025-03-20T21:19:31.2262348+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="36842a08-517f-4ba2-8665-055efc5b5ccf">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has no account at the external platform&#xD;
-&gt; done: GeneralSteps.GivenTheUserHasNoAccountAtTheExternalPlatform() (0,0s)&#xD;
And The user logs in at the time for code platform&#xD;
-&gt; done: LoginSteps.WhenTheUserLogsInAtTheTimeForCodePlatformAsync() (0,0s)&#xD;
And The user logs in at the external platform&#xD;
-&gt; done: GeneralSteps.GivenTheUserLogsInAtTheExternalPlatform() (0,0s)&#xD;
When The external platform calls the time for code platform to complete the authorization&#xD;
-&gt; done: CallbackSteps.WhenTheExternalPlatformCallsTheTimeForCodePlatformToCompleteTheAuthorizationAsync() (0,0s)&#xD;
Then An access token is not returned&#xD;
-&gt; done: CallbackSteps.ThenAnAccessTokenIsNotReturned() (0,0s)&#xD;
And The following callback error message is returned: "No account information"&#xD;
-&gt; done: CallbackSteps.ThenTheFollowingCallbackErrorMessageIsReturned("No account inform...") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6566ec7a-aeaf-40f7-b7a0-1d8bda5e9efe" testId="0170de0d-2b28-6ee7-0d2b-efa93366aefb" testName="UserHasNotLoggedInAtTheExternalPlatform" computerName="ISNL-H1STN44" duration="00:00:00.0985693" startTime="2025-03-20T21:19:30.9269404+01:00" endTime="2025-03-20T21:19:31.0260498+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6566ec7a-aeaf-40f7-b7a0-1d8bda5e9efe">
      <Output>
        <StdOut>dbug: Microsoft.Extensions.Hosting.Internal.Host[1]&#xD;
      Hosting starting&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[2]&#xD;
      Hosting started&#xD;
warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]&#xD;
      Failed to determine the https port for redirect.&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[3]&#xD;
      Hosting stopping&#xD;
dbug: Microsoft.Extensions.Hosting.Internal.Host[4]&#xD;
      Hosting stopped&#xD;
&#xD;
&#xD;
&#xD;
TestContext Messages:&#xD;
Given The user has not logged in at the external platform&#xD;
-&gt; done: GeneralSteps.GivenTheUserHasNotLoggedInAtTheExternalPlatform() (0,0s)&#xD;
When The external platform calls the time for code platform to complete the authorization&#xD;
-&gt; done: CallbackSteps.WhenTheExternalPlatformCallsTheTimeForCodePlatformToCompleteTheAuthorizationAsync() (0,0s)&#xD;
Then An access token is not returned&#xD;
-&gt; done: CallbackSteps.ThenAnAccessTokenIsNotReturned() (0,0s)&#xD;
And The following callback error message is returned: "State is not known"&#xD;
-&gt; done: CallbackSteps.ThenTheFollowingCallbackErrorMessageIsReturned("State is not known") (0,0s)</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="UserHasLoggedInAtTheTimeForCodePlatform" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="4fcc67cb-c565-3b6e-0aab-29271a7573dc">
      <Execution id="21ce6db1-f241-42d4-9f3d-c6a94f1494e8" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Logout.LogoutFeature" name="UserHasLoggedInAtTheTimeForCodePlatform" />
    </UnitTest>
    <UnitTest name="UserWantsToLoginWithAnExistingAccount" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="1046fbe7-4849-a8f8-7f85-9f482fac6a06">
      <Execution id="19616cf7-9f42-456d-b36d-c2303b468b80" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Login.LoginFeature" name="UserWantsToLoginWithAnExistingAccount" />
    </UnitTest>
    <UnitTest name="UserHasAnAccountAtTheExternalPlatform" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="9fdc4ae2-ac90-d0a5-b864-49865970d17b">
      <Execution id="7f8dc1c3-d415-47c6-a2a3-07da4a611fd9" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Login.CallbackFeature" name="UserHasAnAccountAtTheExternalPlatform" />
    </UnitTest>
    <UnitTest name="UserHasNotLoggedInAtTheExternalPlatform" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="0170de0d-2b28-6ee7-0d2b-efa93366aefb">
      <Execution id="6566ec7a-aeaf-40f7-b7a0-1d8bda5e9efe" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Login.CallbackFeature" name="UserHasNotLoggedInAtTheExternalPlatform" />
    </UnitTest>
    <UnitTest name="UserHasNotLoggedInAtTheExternalPlatform" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="50ebd6bf-8bfd-ff90-3ff5-e6e2347d04d0">
      <Execution id="7bc96c2d-713c-4c4a-a15f-74461152c2fb" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Refresh.RefreshTokenFeature" name="UserHasNotLoggedInAtTheExternalPlatform" />
    </UnitTest>
    <UnitTest name="UserHasNoAccountInformationAtTheExternalPlatform" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="8ed13efa-2d4e-3a8e-bfbe-e613d010dc07">
      <Execution id="36842a08-517f-4ba2-8665-055efc5b5ccf" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Login.CallbackFeature" name="UserHasNoAccountInformationAtTheExternalPlatform" />
    </UnitTest>
    <UnitTest name="UserHasNotLoggedInAtTheTimeForCodePlatform" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="65b43fdb-ff04-4c17-0d3e-2262f739802e">
      <Execution id="43264110-3099-4afe-8a0c-f24eff001b0d" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Logout.LogoutFeature" name="UserHasNotLoggedInAtTheTimeForCodePlatform" />
    </UnitTest>
    <UnitTest name="UserHasExpiredRefreshToken" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="0b217f60-3ed5-0b26-935e-af8087cd4d42">
      <Execution id="9616d17e-37a7-447c-8c00-b1b1f1bdb039" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Refresh.RefreshTokenFeature" name="UserHasExpiredRefreshToken" />
    </UnitTest>
    <UnitTest name="UserHasValidRefreshToken" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="cb7d3e80-f2be-0c03-dc4f-57dfb4e217e4">
      <Execution id="fa51811d-b8b0-488b-b087-483d946967f4" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Refresh.RefreshTokenFeature" name="UserHasValidRefreshToken" />
    </UnitTest>
    <UnitTest name="AccessTokenCannotBeReceivedAtTheExternalPlatform" storage="c:\users\wouterf\git\timeforcode\tst\authorization\timeforcode.authorization.specifications\bin\debug\net8.0\timeforcode.authorization.specifications.dll" id="b07af054-76d2-2f83-0084-06d516ff3000">
      <Execution id="8818c8c4-101a-495e-bdfd-22382e794da6" />
      <TestMethod codeBase="C:\Users\WouterF\Git\TimeForCode\tst\Authorization\TimeForCode.Authorization.Specifications\bin\Debug\net8.0\TimeForCode.Authorization.Specifications.dll" adapterTypeName="executor://mstestadapter/v2" className="TimeForCode.Authorization.Specifications.Features.Login.CallbackFeature" name="AccessTokenCannotBeReceivedAtTheExternalPlatform" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="50ebd6bf-8bfd-ff90-3ff5-e6e2347d04d0" executionId="7bc96c2d-713c-4c4a-a15f-74461152c2fb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0b217f60-3ed5-0b26-935e-af8087cd4d42" executionId="9616d17e-37a7-447c-8c00-b1b1f1bdb039" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4fcc67cb-c565-3b6e-0aab-29271a7573dc" executionId="21ce6db1-f241-42d4-9f3d-c6a94f1494e8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="65b43fdb-ff04-4c17-0d3e-2262f739802e" executionId="43264110-3099-4afe-8a0c-f24eff001b0d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1046fbe7-4849-a8f8-7f85-9f482fac6a06" executionId="19616cf7-9f42-456d-b36d-c2303b468b80" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b07af054-76d2-2f83-0084-06d516ff3000" executionId="8818c8c4-101a-495e-bdfd-22382e794da6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cb7d3e80-f2be-0c03-dc4f-57dfb4e217e4" executionId="fa51811d-b8b0-488b-b087-483d946967f4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9fdc4ae2-ac90-d0a5-b864-49865970d17b" executionId="7f8dc1c3-d415-47c6-a2a3-07da4a611fd9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8ed13efa-2d4e-3a8e-bfbe-e613d010dc07" executionId="36842a08-517f-4ba2-8665-055efc5b5ccf" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0170de0d-2b28-6ee7-0d2b-efa93366aefb" executionId="6566ec7a-aeaf-40f7-b7a0-1d8bda5e9efe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Completed">
    <Counters total="10" executed="10" passed="10" failed="0" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <CollectorDataEntries>
      <Collector agentName="ISNL-H1STN44" uri="datacollector://microsoft/CodeCoverage/2.0" collectorDisplayName="Code Coverage">
        <UriAttachments>
          <UriAttachment>
            <A href="ISNL-H1STN44\WouterF_ISNL-H1STN44_2025-03-20.21_19_31.xml"></A>
          </UriAttachment>
        </UriAttachments>
      </Collector>
    </CollectorDataEntries>
  </ResultSummary>
</TestRun>